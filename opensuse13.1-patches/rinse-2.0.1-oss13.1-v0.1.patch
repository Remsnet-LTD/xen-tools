--- /usr/sbin/rinse-orig        2014-04-28 01:21:51.000000000 +0200
+++ /usr/sbin/rinse     2014-06-14 14:45:34.228000000 +0200
@@ -33,6 +33,9 @@
    --post-install        Run the given post-install script instead of the
                          default files in /usr/lib/rinse/$distro

+  --prestage             Run the given pre-install script instead of the
+                        default files in /usr/lib/rinse/prestage/$distro
+
   Misc Options:

    --cache               Should we use a local cache?  (Default is 1)
@@ -235,7 +238,6 @@
 #
 parseCommandLineArguments();

-
 #
 #  Handle special case first.
 #
@@ -263,7 +265,6 @@
 #
 testRootUser() unless ( $CONFIG{ 'print-uris' } );

-
 #
 #  Make sure the directory we're installing into exists.
 #
@@ -306,6 +307,10 @@
 #
 exit if ( $CONFIG{ 'print-uris' } );

+#
+# Run the prestage $distribution installation customisation.
+#
+preInstallationCustomization( $CONFIG{ 'distribution' }, $CONFIG{ 'prestage' } );

 #
 #  Unpack the packages
@@ -421,6 +426,7 @@
         "list-distributions",    \$CONFIG{ 'list-distributions' },
         "print-uris",            \$CONFIG{ 'print-uris' },
         "post-install=s",        \$CONFIG{ 'post-install' },
+        "prestage=s",            \$CONFIG{ 'prestage' },
         "before-post-install=s", \$CONFIG{ 'before-post-install' },
         "after-post-install=s",  \$CONFIG{ 'after-post-install' },
         "add-pkg-list=s",        \$CONFIG{ 'add-pkg-list' },
@@ -1101,6 +1107,96 @@

 =cut

+sub preInstallationCustomization {
+    my ( $distribution, $prestage ) = @_;
+
+    # skip for Opensuse
+    if ($distribution =~ /opensuse/i) {
+        print "Distribution is $distribution, CHROOT prepare may incomplete\n";
+    }
+
+    #  Setup environment for the post-install scripts.
+    #
+    $ENV{ 'ARCH' }      = $CONFIG{ 'arch' };
+    $ENV{ 'mirror' }    = $CONFIG{ 'mirror' };
+    $ENV{ 'dist' }      = $CONFIG{ 'distribution' };
+    $ENV{ 'directory' } = $CONFIG{ 'directory' };
+    $ENV{ 'cache_dir' } = $CONFIG{ 'cache-dir' };
+    $ENV{ 'prestage' }  = $CONFIG{ 'prestage' };
+
+    my $prefix = $CONFIG{ 'directory' };
+
+    #  Default directory
+    #
+    my $script_dir = "/usr/lib/rinse/prestage";
+
+    #  Overrided by --prestage
+    #
+    if ($prestage) {
+        $script_dir = $prestage;
+
+        $CONFIG{ 'verbose' } && print "Changed directory to $script_dir\n";
+    }
+
+    $CONFIG{ 'verbose' } && print "Directory is $script_dir\n";
+
+    #  Des the directory exists?
+    #
+    unless (-e $script_dir) {
+        $CONFIG{ 'verbose' } && print "$script_dir doesn't exists, CHROOT prepare may incomplete \n";
+    }
+
+    #  It is really a directory?
+    #
+    unless (-d $script_dir) {
+        $CONFIG{ 'verbose' } && print "$script_dir is not a directory, CHROOT prepare may incomplete \n";
+
+    }
+
+    #  Normalize this path, remove the trailing /
+    #
+    $script_dir =~ s/\/*$//;
+
+    #  OK we run the per-distro file(s), along with any common files.
+    #
+    my @scripts = ();
+    push @scripts, sprintf("%s/%s.sh",  $script_dir, lc $distribution);
+
+    foreach my $script ( @scripts )
+    {
+        $CONFIG{'verbose'} && print "Run script: $script $prefix\n";
+
+        # you need /usr/lib/rinse/prestage/<distribution>.sh to exists
+        unless (-e $script) {
+            $CONFIG{ 'verbose' } && print "$script doesn't exists, CHROOT prepare may incomplete\n";
+        }
+
+        # you need /usr/lib/rinse/prestage/<distribution>.sh to be executable
+        unless (-x $script) {
+            $CONFIG{ 'verbose' } && print "$script cannot be executed, CHROOT prepare may incomplete\n";
+        }
+
+        $CONFIG{ 'verbose' } && print "Running prestage $distribution install script $script $prefix:\n";
+
+        my $return_code = system($script, $prefix);
+
+        $CONFIG{ 'verbose' } && print "$script returned [$return_code]\n";
+    }
+}
+
+
+=begin doc
+
+ prestage install  of RPM files from /usr/lib/rinse/prestage/$distribution script
+ Distributions like OpenSuSE require since 12.3 extra stage bevor the main rpm deployment run with unpackPackages,
+ in order to get an valid OS deployment
+
+
+=end doc
+
+=cut
+
+
 sub unpackPackages
 {
     my ($dir) = (@_);
