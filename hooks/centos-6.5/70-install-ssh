#!/bin/sh
#
#  This script installs OpenSSH upon the new system.
#
# Steve
# --
# http://www.steve.org.uk/


prefix=$1


#
#  Source our common functions
#
if [ -e /usr/share/xen-tools/common.sh ]; then
    . /usr/share/xen-tools/common.sh
else
    . ./hooks/common.sh
fi


#
# Log our start
#
logMessage Script $0 starting

#
# Install the OpenSSH server.
#
if [ ! -d ${prefix}/proc ]; then
    mkdir -p ${prefix}/proc
fi
if [ ! -d ${prefix}/sys ]; then
    mkdir -p ${prefix}/sys
fi

if [ ! -d ${prefix}/etc/ssh ]; then
    mkdir -p ${prefix}/etc/ssh
fi

if [ ! -d ${prefix}/tmp ]; then
    mkdir -p ${prefix}/tmp/
fi

if [ -f ${prefix}/etc/ssh ]; then
        mv ${prefix}/etc/ssh/sshd_config mv ${prefix}/etc/ssh/sshd_config-orig
cat >> ${prefix}/etc/ssh/sshd_config << EOF
#
#       $CentOS 6.5: sshd_config,v 23.4 2014/05/06 14:20:14 remsnet support Exp $

# This is the sshd server system-wide configuration file.  See
# sshd_config(5) for more information.

# This sshd was compiled with PATH=/usr/bin:/bin:/usr/sbin:/sbin

# The strategy used for options in the default sshd_config shipped with
# OpenSSH is to specify options with their default value where
# possible, but leave them commented.  Uncommented options override the
# default value.

Port 22
ListenAddress 0.0.0.0

# The default requires explicit activation of protocol 1
Protocol 2

# HostKeys for protocol version 2
HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_dsa_key
#HostKey /etc/ssh/ssh_host_ecdsa_key
#Privilege Separation is turned on for security


# Lifetime and size of ephemeral version 1 server key
KeyRegenerationInterval 1h
ServerKeyBits 2048

# Logging
# obsoletes QuietMode and FascistLogging
SyslogFacility AUTH
#LogLevel INFO

# Authentication:

LoginGraceTime 2m

# with ssh key
PermitRootLogin without-password
StrictModes yes
MaxAuthTries 2
MaxSessions 3

RSAAuthentication yes
PubkeyAuthentication yes
AuthorizedKeysFile      %h/.ssh/authorized_keys


#AuthorizedPrincipalsFile none

#AuthorizedKeysCommand none
#AuthorizedKeysCommandUser nobody

# Don't read the user's ~/.rhosts and ~/.shosts files
IgnoreRhosts yes
# For this to work you will also need host keys in /etc/ssh_known_hosts
RhostsRSAAuthentication no
# similar for protocol version 2
HostbasedAuthentication yes
# Uncomment if you don't trust ~/.ssh/known_hosts for RhostsRSAAuthentication
#IgnoreUserKnownHosts yes

# To enable empty passwords, change to yes (NOT RECOMMENDED)
PermitEmptyPasswords yes

# To disable tunneled clear text passwords, change to no here!
PasswordAuthentication yes

# Change to no to disable s/key passwords
ChallengeResponseAuthentication no

# Kerberos options
#KerberosAuthentication no
#KerberosOrLocalPasswd yes
#KerberosTicketCleanup yes
#KerberosGetAFSToken no

# GSSAPI options
#GSSAPIAuthentication no
#GSSAPICleanupCredentials yes

# Set this to 'yes' to enable support for the deprecated 'gssapi' authentication
# mechanism to OpenSSH 3.8p1. The newer 'gssapi-with-mic' mechanism is included
# in this release. The use of 'gssapi' is deprecated due to the presence of
# potential man-in-the-middle attacks, which 'gssapi-with-mic' is not susceptible to.
#GSSAPIEnableMITMAttack no

# Set this to 'yes' to enable PAM authentication, account processing,
# and session processing. If this is enabled, PAM authentication will
# be allowed through the ChallengeResponseAuthentication and
# PasswordAuthentication.  Depending on your PAM configuration,
# PAM authentication via ChallengeResponseAuthentication may bypass
# the setting of "PermitRootLogin without-password".
# If you just want the PAM account and session checks to run without
# PAM authentication, then enable this but set PasswordAuthentication
# and ChallengeResponseAuthentication to 'no'.
UsePAM yes

AllowAgentForwarding yes
AllowTcpForwarding yes
#GatewayPorts no
X11Forwarding yes
#X11DisplayOffset 10
#X11UseLocalhost yes
PrintMotd no
PrintLastLog yes
TCPKeepAlive yes
#UseLogin no
#UsePrivilegeSeparation sandbox          # Default for new installations.
#PermitUserEnvironment no
#Compression delayed
ClientAliveInterval 30
ClientAliveCountMax 3
#UseDNS yes
#PidFile /run/sshd.pid
#MaxStartups 10:30:100
PermitTunnel no
#ChrootDirectory none
#VersionAddendum none

# no default banner path
Banner /etc/issue.rcis

# override default of no subsystems
Subsystem       sftp    /usr/lib/ssh/sftp-server

# This enables accepting locale enviroment variables LC_* LANG, see sshd_config(5).
AcceptEnv LANG LC_*


# Example of overriding settings on a per-user basis
#Match User anoncvs
#       X11Forwarding no
#       AllowTcpForwarding no
#       ForceCommand cvs server
#
EOF

fi


cat >>  ${prefix}/tmp/sshd-host-keys.sh << EOF

#!/bin/sh
cd /etc/ssh

if ! test -f /etc/ssh/ssh_host_key ; then
        echo Generating /etc/ssh/ssh_host_key.
        ssh-keygen -t rsa1 -b 4096 -C `hostname` -f /etc/ssh/ssh_host_key -N ''
fi

if ! test -f /etc/ssh/ssh_host_dsa_key ; then
                    echo Generating /etc/ssh/ssh_host_dsa_key.
                    ssh-keygen -t dsa -b 1024 -C `hostname` -f /etc/ssh/ssh_host_dsa_key -N ''
fi

if ! test -f /etc/ssh/ssh_host_rsa_key ; then
                    echo Generating /etc/ssh/ssh_host_rsa_key.
                    ssh-keygen -t rsa -b 4096 -C `hostname` -f /etc/ssh/ssh_host_rsa_key -N ''
fi

# not compiled in at centos
#if ! test -f /etc/ssh/ssh_host_ecdsa_key ; then
#                    echo Generating /etc/ssh/ssh_host_ecdsa_key.
#                    ssh-keygen -t  ecdsa -b 256 -C `hostname` -f /etc/ssh/ssh_host_ecdsa_key -N ''
#fi
#
EOF
chmod 750 ${prefix}/tmp/sshd-host-keys.sh

mount -o bind /proc ${prefix}/proc
mount -o bind /sys ${prefix}/sys
chroot ${prefix} /usr/bin/yum  -y install openssh-server passwd
#
chroot ${prefix} /tmp/sshd-host-keys.sh
#
umount -f ${prefix}/proc
umount -f ${prefix}/sys


#
#  Log our finish
#
logMessage Script $0 finished
